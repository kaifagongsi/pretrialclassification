<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kfgs.pretrialclassification.dao.FenleiBaohuUserinfoMapper">

    <resultMap id="BaseResultMap" type="com.kfgs.pretrialclassification.domain.ext.FenleiBaohuUserinfoExt">
        <id column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <id column="password" property="password" jdbcType="VARCHAR"/>
        <id column="name" property="name" jdbcType="VARCHAR"/>
        <id column="orgname" property="orgname" jdbcType="VARCHAR"/>
        <id column="areaname" property="areaname" jdbcType="VARCHAR"/>
        <id column="classlevel" property="classlevel" jdbcType="VARCHAR"/>
        <id column="workername" property="workername" jdbcType="VARCHAR"/>
        <id column="email" property="email" jdbcType="VARCHAR"/>
        <id column="dep1" property="dep1" jdbcType="VARCHAR"/>
        <id column="dep2" property="dep2" jdbcType="VARCHAR"/>
        <id column="type" property="type" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List_Befor" >
        loginname,password,name,ORGNAME,AREANAME,CLASSLEVEL,WORKERNAME,EMAIL,DEP1,DEP2,TYPE
    </sql>

    <sql id="Base_Column_List_After" >
        loginname,password,name,ORGNAME,AREANAME,CLASSLEVEL,WORKERNAME,EMAIL,DEP1,DEP2,TYPE,IPCS,FIELDS,LAST_TIME,LAST_IPC,IS_ONLINE,ADJUDICATOR
    </sql>


    <!--关联到用户的权限信息-->
    <resultMap type="com.kfgs.pretrialclassification.domain.ext.FenleiBaohuUserinfoExt" id="UserBaseResultMap" extends="BaseResultMap">
        <collection property="authorities" ofType="com.kfgs.pretrialclassification.domain.FenleiBaohuRole">
            <result column="rolename" property="rolename"/>
        </collection>
    </resultMap>


    <select id="findAreaName" resultType="com.kfgs.pretrialclassification.domain.FenleiBaohuUserinfo">
        select areaname,wm_concat(workername || '[' ||classlevel || ']' ) as workername
          from fenlei_baohu_userinfo
        where areaname is not null and classlevel is not null and classlevel != 'Z' and is_online = '1'
        group by areaname
        order by areaname
    </select>

    <select id="getUserinfoByLoginName"
            resultMap="UserBaseResultMap" parameterType="java.lang.String">
        select u.loginname,u.password,u.name,u.ORGNAME,u.AREANAME,u.CLASSLEVEL,u.WORKERNAME,u.EMAIL,u.DEP1,u.DEP2,TYPE from fenlei_baohu_userinfo u  where u.loginname = #{loginname}
    </select>

    <select id="getUserinfoByLoginNameWithRole"
            resultMap="UserBaseResultMap" parameterType="java.lang.String">
        select u.loginname,u.password,u.name,u.ORGNAME,u.AREANAME,u.CLASSLEVEL,u.WORKERNAME,u.EMAIL,u.DEP1,u.DEP2,u.TYPE ,r.rolename as rolename from fenlei_baohu_userinfo u,FENLEI_BAOHU_ROLE r where u.type = r.id AND u.loginname = #{loginname}
    </select>
    <select id="getUserList" resultType="com.kfgs.pretrialclassification.domain.FenleiBaohuUserinfo">
        select loginname,name,dep1,dep2,type from fenlei_baohu_userinfo
        <where>
            <if test="dep1 != null">
                and dep1 = #{dep1}
            </if>
            <if test="dep2 != null">
                and dep2 = #{dep2}
            </if>
            <if test="isOnline != null">
                and is_online = #{isOnline}
            </if>
        </where>
    </select>


    <insert id="insertSelective" parameterType="com.kfgs.pretrialclassification.domain.FenleiBaohuUserinfo" >
        insert into FENLEI_BAOHU_USERINFO
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="loginname != null" >
                LOGINNAME,
            </if>
            <if test="password != null" >
                PASSWORD,
            </if>
            <if test="name != null" >
                NAME,
            </if>
            <if test="orgname != null" >
                ORGNAME,
            </if>
            <if test="areaname != null" >
                AREANAME,
            </if>
            <if test="classlevel != null" >
                CLASSLEVEL,
            </if>
            <if test="workername != null" >
                WORKERNAME,
            </if>
            <if test="email != null" >
                EMAIL,
            </if>
            <if test="dep1 != null" >
                DEP1,
            </if>
            <if test="dep2 != null" >
                DEP2,
            </if>
            <if test="type != null" >
                TYPE,
            </if>
            <if test="ipcs != null" >
                IPCS,
            </if>
            <if test="fields != null" >
                FIELDS,
            </if>
            <if test="lastTime != null" >
                LAST_TIME,
            </if>
            <if test="lastIpc != null" >
                LAST_IPC,
            </if>
            <if test="isOnline != null" >
                IS_ONLINE,
            </if>
            <if test="adjudicator != null" >
                ADJUDICATOR,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="loginname != null" >
                #{loginname,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="orgname != null" >
                #{orgname,jdbcType=VARCHAR},
            </if>
            <if test="areaname != null" >
                #{areaname,jdbcType=VARCHAR},
            </if>
            <if test="classlevel != null" >
                #{classlevel,jdbcType=VARCHAR},
            </if>
            <if test="workername != null" >
                #{workername,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="dep1 != null" >
                #{dep1,jdbcType=VARCHAR},
            </if>
            <if test="dep2 != null" >
                #{dep2,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="ipcs != null" >
                #{ipcs,jdbcType=VARCHAR},
            </if>
            <if test="fields != null" >
                #{fields,jdbcType=VARCHAR},
            </if>
            <if test="lastTime != null" >
                #{lastTime,jdbcType=VARCHAR},
            </if>
            <if test="lastIpc != null" >
                #{lastIpc,jdbcType=VARCHAR},
            </if>
            <if test="isOnline != null" >
                #{isOnline,jdbcType=VARCHAR},
            </if>
            <if test="adjudicator != null" >
                #{adjudicator,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="insertEntity" parameterType="com.kfgs.pretrialclassification.domain.FenleiBaohuUserinfo">
        INSERT INTO FENLEI_BAOHU_USERINFO  (
          LOGINNAME, PASSWORD, NAME,  AREANAME, CLASSLEVEL, WORKERNAME, EMAIL, DEP1, DEP2, TYPE, IPCS, FIELDS,   IS_ONLINE, ADJUDICATOR )
        VALUES  (
          #{loginname},#{password},#{name},#{areaname},#{classlevel},#{workername},#{email},#{dep1},#{dep2},#{type},#{ipcs},#{fields},#{isOnline},#{Adjudicator}
         )
    </insert>

    <select id="selectOneByLoginname" resultType="com.kfgs.pretrialclassification.domain.FenleiBaohuUserinfo" >
      select
        <include refid="Base_Column_List_After"/>
       from  FENLEI_BAOHU_USERINFO
       where loginname = #{loginname}
    </select>
    <select id="selectListByDep1AndDep2" resultType="java.lang.String">
        select workername from FENLEI_BAOHU_USERINFO where (dep1 = #{dep1} and dep2 = #{dep2}   and IS_ONLINE = '1' ) OR (dep1 = #{dep1} and dep2 = #{dep2} and classlevel ='C')
    </select>
    <select id="selectListByWorkerName"
            resultType="com.kfgs.pretrialclassification.domain.request.ArbiterParam">
        select dep1 as dep1,dep2 as dep2, workername as person from FENLEI_BAOHU_USERINFO
        where workername in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>
    <select id="selectAdjudicatorByWorkerName" resultType="java.lang.String">
        select ADJUDICATOR from fenlei_baohu_userinfo where  workername = #{workerName}
    </select>

    <select id="selectUpdateWorkerName" resultType="java.lang.String">
        select workername from fenlei_baohu_userinfo where  workername like concat('%',#{worker})
    </select>
    <select id="selectEmailByList" resultType="java.lang.String">
        select email from  fenlei_baohu_userinfo where loginname in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>

    </select>
    <select id="selectDistinctDep1" resultType="java.lang.String">
        select  distinct dep1  fROM fenlei_baohu_userinfo
    </select>
    <select id="selectFullNameByLoginList" resultType="java.lang.String">
        select areaname || '-' ||workername || '[' ||classlevel || ']'
          from fenlei_baohu_userinfo
        where loginname in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
        order by areaname
    </select>

</mapper>
